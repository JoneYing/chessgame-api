<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="${redis.maxTotal}" />
		<!-- 最大空闲连接数, 默认8个 -->
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!-- 最小空闲连接数, 默认0 -->
		<property name="minIdle" value="${redis.minIdle}" />
		<!-- 获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间, 默认-1 -->
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"
		scope="singleton">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg name="host" value="${redis.host}" />
					<constructor-arg name="port" value="${redis.port}" />
					<constructor-arg name="timeout" value="${redis.timeout}" />
					<constructor-arg name="name" value="shardInfoName01" />
					<constructor-arg name="weight" value="1" />
					<property name="password" value="${redis.pass}"></property>
				</bean>
			</list>
		</constructor-arg>
	</bean>

	<bean id="redisDataSource" class="com.game.chess.dao.redis.BasicRedisDataSource">
		<property name="shardedJedisPool" ref="shardedJedisPool" />
	</bean>

	<bean id="redisClientTemplate" class="com.game.chess.dao.redis.RedisClientTemplate">
		<property name="redisDataSource" ref="redisDataSource" />
	</bean>
	
	<!-- Session Cache -->
	<bean class="com.game.chess.utils.SessionUtil">
		<constructor-arg index="0" ref="sessionContainer" />
	</bean>

</beans>
